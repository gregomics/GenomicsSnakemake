"""Trim reads using fastq-mcf software

"""

if not "dir" in config.keys():
    sys.exit('The key ["dir"] must be defined in the YAML file')

if not "data" in config["dir"].keys():
    sys.exit('The key ["dir"]["data"] must be defined in the YAML file')

if not "results" in config["dir"].keys():
    sys.exit('The key ["dir"]["results"] must be defined in the YAML file')

if not "adaptors_file" in config["fastq-mcf"].keys():
    sys.exit('The key ["fastq-mcf"]["adaptors_file"] must be defined in the YAML file')

if not "fwd_read" in config["suffix"].keys():
    sys.exit('The key ["suffix"]["fwd_read"] must be defined in the YAML file')

if not "rev_read" in config["suffix"].keys():
    sys.exit('The key ["suffix"]["rev_read"] must be defined in the YAML file')

if not "threshold" in config["fastq-mcf"].keys():
    config["fastq-mcf"]["threshold"] = "20"

"""
rule trim_paired_ends:
#  input: forward = config["dir"]["data"] + "{reads}" + config["suffix"]["fwd_read"] + ".fastq.gz", \
#         reverse = config["dir"]["data"] + "{reads}" + config["suffix"]["rev_read"] + ".fastq.gz"
#  output: forward = config["dir"]["results"] + "{reads}" + config["suffix"]["fwd_read"] + "_adapt_qual_trimmed.fastq", \
#          reverse = config["dir"]["results"] + "{reads}" + config["suffix"]["rev_read"] + "_adapt_qual_trimmed.fastq"
 
#  params: threshold = config["fastq-mcf"]["threshold"] ,\
#     adaptor_file   =  config["fastq-mcf"]["adaptors_file"]
#  log: "logs/trimming/{reads}_fastq-mcf.log"
  message: "Trimming PE data using fastq-mcf fwd: {input.forward} and rev: {input.reverse}"
  shell: "fastq-mcf {params.adaptor_file} {input.forward} {input.reverse} -q {params.threshold} -o {output.forward} -o {output.reverse} 2> {log}"
"""

rule trim_paired_end:
  input: forward = config["dir"]["data"] + "{file}" + "_" + config["suffix"]["fwd_read"] + ".fastq.gz" ,\
         reverse = config["dir"]["data"] + "{file}" + "_" + config["suffix"]["rev_read"] + ".fastq.gz"
  output: forward = config["dir"]["results"] + "{file}" + "_R1_adapt_qual_trimmed.fastq" ,\
          reverse = config["dir"]["results"] + "{file}" + "_R2_adapt_qual_trimmed.fastq"
  params: threshold = config["fastq-mcf"]["threshold"] ,\
      adaptor_file   = config["fastq-mcf"]["adaptors_file"]
  log: "logs/trimming/{file}_fastq-mcf.log"
  shell: "fastq-mcf {params.adaptor_file} {input.forward} {input.reverse} -q {params.threshold} -o {output.forward} -o {output.reverse} 2>&1 > {log}"

